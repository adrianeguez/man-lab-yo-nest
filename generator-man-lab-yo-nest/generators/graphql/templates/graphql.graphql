scalar Date
scalar JSON

type Query {
  findAll<%= nombreGraphql %>(criterioBusqueda:CriterioBusquedaFindAll): RespuestaFind<%= nombreGraphql %>
  findWhereOr<%= nombreGraphql %>(criterioBusqueda:CriterioBusquedaFindWhereOr!): RespuestaFind<%= nombreGraphql %>
  findOne<%= nombreGraphql %>ById(id:String): <%= nombreGraphql %>
}

type Mutation {
  createOne<%= nombreGraphql %>(nuevoRegistro:Create<%= nombreGraphql %>Dto!): <%= nombreGraphql %>CreadoOActualizado
  deleteOne<%= nombreGraphql %>(id:String!): RespuestaEliminar
  updateOne<%= nombreGraphql %>(id:String!, registroAActualizar:Update<%= nombreGraphql %>Dto!): <%= nombreGraphql %>CreadoOActualizado
}


type <%= nombreGraphql %> {
  id: ID
  createdAt: Date
  updatedAt: Date
  # Llenar Tipo
}

input Create<%= nombreGraphql %>Dto {
  # Llenar Create Dto
}

input Update<%= nombreGraphql %>Dto {
  # Llenar Update Dto
}

input CriterioBusquedaFindAll {
  skip: Int
  take: Int
  where: JSON
  relations: [String]
  join: JSON
  order: JSON
}

input CriterioBusquedaFindWhereOr {
  camposABuscar: [CamposABuscar]!
  skip: Int
  take: Int
  relations: [FindWhereRelations]
}

input CamposABuscar {
  campo: String!
  valor: String!
}

input FindWhereRelations{
  entidad: String!
  key: String!
  query: [CamposABuscar]
}

type RespuestaEliminar{
  mensaje:String!
}

type <%= nombreGraphql %>CreadoOActualizado {
  id: ID
  createdAt: Date
  updatedAt: Date
    # creado o actualizado
}

type RespuestaFind<%= nombreGraphql %> {
    registros:[<%= nombreGraphql %>]
    numero:Int
}